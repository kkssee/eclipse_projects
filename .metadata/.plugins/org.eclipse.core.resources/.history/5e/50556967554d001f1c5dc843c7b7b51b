package com.test.sku.pds;

import java.net.*;
import java.io.*;
import java.util.*;

import com.test.sku.cmon.ChatMsg;

public class PDSClient {
	static Scanner kbd = new Scanner(System.in);
	static PDSVO pv = new PDSVO();
	static PDSResponse pResp = new PDSResponse();
	static PDSRequest prq = new PDSRequest();
	
	static List<PDSVO> list = new ArrayList<>();
	
	public static void main(String[] args) {
		try {
			Socket s = new Socket("localhost", 1234);
			System.out.println("클라이언트 입니다");
			
			InputStream in = s.getInputStream();
			ObjectInputStream oin = new ObjectInputStream(in);
			
			OutputStream out = s.getOutputStream();
			ObjectOutputStream oos = new ObjectOutputStream(out); 
			
			boolean go = true;
			while(go) {
			PDSResponse pResp = (PDSResponse)oin.readObject();
			System.out.println(pResp); 		// 파일 업로드(u), 목록보기(s), 상세보기(i),
											// 제목으로 검색(f), 수정(m), 삭제(d), 종료(x)
			String m = kbd.nextLine().trim();
			
			switch(m) {
			case "u": {
				 System.out.println("파일명 작성자 설명:");
		    	 String input = kbd.nextLine();
		    	 String[] token = input.split("\\s+");
		    	 
		    	 if(!token[0].equals("") && token[0]!=null) {
					  boolean exist = FileIO.fileExist(token[0]);
					  if(exist) {	// 파일 존재 여부 확인 -> 성공시
							byte[] bt = FileIO.upload(token[0]);
							long len = FileIO.size(token[0]);
							prq = new PDSRequest();
							pv = new PDSVO();
							pv.fname = token[0];
							pv.author = token[1];
							pv.desc = token[2];
							pv.fdata = bt;
							pv.flen =len;
							
							prq.pv = pv;
							prq.upload=true;
							
							oos.writeObject(prq);
							oos.flush();								
							System.out.println("파일 업로드 완료");	// 예외처리 필요
							break;								
						}else {
							System.out.println("파일이 존재하지 않습니다");
							break;
						}						  
				   }
				break;
			}
			case "s": {
				prq = new PDSRequest();
		    	prq.showList = true;
		    	oos.writeObject(prq);
		    	oos.flush();
		     
		    	pResp = (PDSResponse)oin.readObject();
		    	list = pResp.pList;
		    	for(int i = 0; i < list.size(); i++) {
		    		System.out.println(list.get(i));
		    	}
				break;
			}
			case "i": {
				
				break;
			}
			case "f": {
				prq = new PDSRequest();
				
				System.out.println("파일명으로 검색: ");
		    	String fname = kbd.nextLine(); 
		    	
		    	prq.pv.fname = fname;
		    	prq.find = true;
		    	oos.writeObject(prq);
		    	oos.flush();
		    	 
		    	pResp = (PDSResponse)oin.readObject();
		    	System.out.println(pResp.pv);
		    	break;
			}
			case "m": {
				
				break;
			}
			case "d": {
				
				break;
			}
			case "x": {
				
				return;
			}
			default: System.err.println("잘못된 입력입니다.");
			}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}	// end of main

}
