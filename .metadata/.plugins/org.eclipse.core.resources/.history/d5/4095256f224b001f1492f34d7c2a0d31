package com.test.sku.Cereal;

import java.io.*;
import java.util.*;

public class DocIO {

	static String upPath = "C:/test/uploads/";
	static String downPath = "C:/test/downloads/";
	static List<FileInfo> list = new ArrayList<>();
	
	public static byte[] read(String fname) {
		File file = new File(upPath+fname);
		try {
			FileInputStream fin = new FileInputStream(file);
			byte[] fdata = new byte[(int)file.length()+1];
			fin.read(fdata);
			fin.close();
			return fdata;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	public static void serialize(FileInfo fi) {
		list.add(fi);
		
		try {
			FileOutputStream out = new FileOutputStream(downPath + "list.ser");
			ObjectOutputStream oos = new ObjectOutputStream(out);
			oos.writeObject(list);
			oos.close();
			System.out.println("저장 완료");
		} catch (Exception e) {
			System.err.println("저장 실패");
			e.printStackTrace();
		} 
	}
	public static List<FileInfo> deserialize() {
		try {
			FileInputStream in = new FileInputStream(downPath + "list.ser");
			ObjectInputStream ois = new ObjectInputStream(in);
			List<FileInfo> list = (List<FileInfo>)ois.readObject();
			ois.close();
			
			System.out.println("\t역직렬화 후의 리스트 내용 보기");
			for(int i = 0; i < list.size(); i++) {
				System.out.println(list.get(i));
			}
			return list;
		} catch (Exception e) {
			System.err.println("파일 읽기 실패");
			e.printStackTrace();
		} 
		return null;
	}
	public static void download(FileInfo fi) {
		File file = new File(downPath + fi.fname);
		try {
			FileOutputStream fout = new FileOutputStream(file);
			fout.write(fi.fdata);
			fout.flush();
		    System.out.println("다운로드 완료");
		    fout.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void searchByNo(int fno) {
		list = deserialize();
		
		
		
	}
	public static void searchByName(String fname) {
		
	}


	public static void serfialize() {
		
	}

}
