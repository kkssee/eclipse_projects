package com.test.sku.pds;

import java.io.*;
import java.net.*;
import java.util.*;

public class ServerThread extends Thread {
	private Socket s;
	private ObjectOutputStream oos;
	private ObjectInputStream ois;
	
	private static List<PDSVO> list = new ArrayList<>();
	private PDSVO pv = new PDSVO();
	private PDSResponse pResp;
	private PDSRequest prq;
	
	public static String upPath = "C:/test/uploads/";
	//public static String downPath = "";
	
	public ServerThread(Socket s) {
		this.s = s;
		try {			
			 oos = new ObjectOutputStream(s.getOutputStream());
			 ois = new ObjectInputStream(s.getInputStream());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
		try {
			while(true) {
				pResp = new PDSResponse("파일 업로드(u), 목록보기(s), 상세보기(i),"
									  + " 제목으로 검색(f), 수정(m), 삭제(d), 종료(x)");
				oos.writeObject(pResp);
				oos.flush();
				
				prq = (PDSRequest)ois.readObject();
				
				if(prq.upload) {
					FileIO.download(prq.pv);
					Date date = new Date();		
					int nextFno;
					Collections.sort(list);
					if (!list.isEmpty()) {
					    nextFno = list.get(list.size() - 1).getNo() + 1;
					} else {
					    nextFno = 1; 
					}
					PDSVO pv = new PDSVO(nextFno, prq.pv.fname, prq.pv.author, prq.pv.flen, date, prq.pv.desc);
					list.add(pv);
					FileIO.serialize(list);
				} else if(prq.showList) {
					list = FileIO.deserialize();
					pResp = new PDSResponse();
					pResp.pList = list;
					oos.writeObject(pResp);
					oos.flush();
				} else if(prq.detailList) {
					
				} else if(prq.find) {
					pResp = new PDSResponse();
					pResp.pv = FileIO.find(prq.pv);
					oos.writeObject(pResp);
					oos.flush();	
				} else if(prq.update) {
					list = FileIO.deserialize();
					if (list.contains(prq.pv)) {
						int idx = list.indexOf(prq.pv);
						PDSVO pv = list.get(idx);
						pv.setDesc(prq.pv.desc);					
						list.set(idx,pv);
						FileIO.serialize(list);
		            }else {
		            	System.out.println("수정실패");
		            }
				} else if(prq.delete) {
					boolean deleted = FileIO.delete(prq.pv);
				} 
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
}
