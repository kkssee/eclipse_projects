package com.test.sku.superpet;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class FileIO {
	static Scanner kbd = new Scanner(System.in);
	static String fpath = "C:/test/data/superPets.txt";
	
	public static boolean addPet(String m, String petInfo) {
		String[] str = petInfo.split("\\s+");
		System.out.println("haha");
		List<Pet> cart = getList();
		
		switch (m) {
			case "c": {
				Cat pet = new Cat(Integer.parseInt(str[0]), str[1], Float.parseFloat(str[2]), str[3]);
				cart.add(pet); overwrite(cart); return true;
			} case "d": {
				Dog pet = new Dog(Integer.parseInt(str[0]), str[1], Float.parseFloat(str[2]), Float.parseFloat(str[3]));
				cart.add(pet); break;
			} case "s": {
				Snake pet = new Snake(Integer.parseInt(str[0]), str[1], Float.parseFloat(str[2]), str[3]);
				cart.add(pet); break;
			} case "h":  {
				Hamster pet = new Hamster(Integer.parseInt(str[0]), str[1], Float.parseFloat(str[2]));
				cart.add(pet); break;
			}
			
		}	
		return false;
	}
	private static boolean overwrite(List<Pet> list) 
	{
		try {
			ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fpath)); 
			oos.writeObject(list);
			oos.close();
			return true;
		} catch (Exception e) {
			System.out.println("jdklfj");
			e.printStackTrace();
		}
		return false;
	}
	public static List<Pet> getList() 
	{
		try {
			File ser = new File(fpath);
			if(!ser.exists())	// 직렬화 파일이 없는 경우
			{
				List<Pet> list = new ArrayList<>();
				overwrite(list);
			}
			ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fpath));
			List<Pet> list = (List<Pet>)ois.readObject();
			ois.close();
			return list;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}


}
